apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: productpage
spec:
  scaleTargetRef:
    name: productpage         # Mandatory. Must be in the same namespace as the ScaledObject
  pollingInterval:  120                               # Optional. Default: 30 seconds
  cooldownPeriod:   300                              # Optional. Default: 300 seconds
  idleReplicaCount: 0                                # Optional. Default: ignored, must be less than minReplicaCount 
  minReplicaCount:  1                                # Optional. Default: 0
  maxReplicaCount:  1                            # Optional. Default: 100                                    # Mandatory if fallback section is included
  triggers:
  - type: prometheus
    metadata:
    # Required fields:
      serverAddress: http://prom-prometheus-server.prom:80
      metricName: nginx_ingress_controller_requests # Note: name to identify the metric, generated value would be `prometheus-http_requests_total`
      query: sum(rate(nginx_ingress_controller_requests{service="productpage",namespace="bookinfo-bl"}[2m])) # Note: query must return a vector/scalar single element response
      threshold: '100.50'
      activationThreshold: '1.0'
    # Optional fields:
      ignoreNullValues: "true" # Default is `true`, which means ignoring the empty value list from Prometheus. Set to `false` the scaler will return error when Prometheus target is lost